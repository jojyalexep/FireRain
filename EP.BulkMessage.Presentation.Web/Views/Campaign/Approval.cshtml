@model IEnumerable<EP.BulkMessage.Presentation.Web.ViewModel.CampaignVM>

@{
    ViewBag.Title = "Approve";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section scripts{

    @Styles.Render("~/Content/themes/base/css")
    <link href="~/Content/jquery.timepicker.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.timepicker.min.js"></script>
    <script src="~/Scripts/campaign-main.js"></script>
    <script>
     

        
    </script>
}

@if (ViewBag.Message != null)
{
    @section featured {
        <section class="featured">
            <div class="content-wrapper">
                @ViewBag.Message
            </div>
        </section>
    }
}
<h2>Approve Campaigns </h2>
<div id="divCampaigns">
    <table>
        <tr>
            <th>Id
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>Created By
               
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>Remarks
            </th>
            <th>Action</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td width="50px">CP-@item.Id
                </td>
                <td width="150px">
                  <b>@Html.ActionLink(item.Name, "ApprovalDetails", new { id = item.Id })</b>
                </td>
                <td class="tdType">
                    @if (item.TypeId == 1)
                    {
                        @:<img src="@Url.Content("~/Images/email.png")" width="20" height="20" title="Email" />
                }
                    else
                    {
                        @:<img src="@Url.Content("~/Images/sms.png")" width="20" height="20" title="SMS" />
                }
                    @*  <br />
            @Html.DisplayFor(modelItem => item.Type)*@
                </td>
                <td width="100px">
                    @Html.DisplayFor(modelItem => item.CreatedBy)
                </td>
                <td class="tdStatus">
                    @switch (item.StatusId)
                    {
                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.New):
                            {
                        @:<img src="@Url.Content("~/Images/new.png")" width="20" height="20" title="New" />
                                 break;
                            }


                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Approved):
                            {
                        @:<img src="@Url.Content("~/Images/approved.png")" width="20" height="20" title="Approved" />
                                 break;
                            }

                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Scheduled):
                            {
                        @:<img src="@Url.Content("~/Images/calendar.png")" width="20" height="20" title="Scheduled" />

                                break;
                            }

                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Progress):
                            {
                        @:<img src="@Url.Content("~/Images/ajax-loader-red.gif")" width="20" height="20" title="Progress" />
                                 break;
                            }

                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Stopped):
                            {
                        @:<img src="@Url.Content("~/Images/stop.png")" width="20" height="20" title="Stopped" />
                                 break;
                            }

                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Completed):
                            {
                        @:<img src="@Url.Content("~/Images/task_completed.png")" width="20" height="20" title="Completed" />
                                 break;
                            }

                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Rejected):
                            {
                        @:<img src="@Url.Content("~/Images/stop.png")" width="20" height="20" title="Rejected" />
                                 break;
                            }
                    }
                    <p class="small status">
                        @Html.DisplayFor(modelItem => item.Status)
                    </p>
                </td>
                <td width="250px">
                    @switch (item.StatusId)
                    {
                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.New):
                            {
                        <span class="small">Created on  @item.CreatedDate.ToShortDateString()</span>
                                break;
                            }


                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Approved):
                            {
                        <span class="small">Created on  @item.CreatedDate.ToShortDateString()</span>
                                break;
                            }

                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Scheduled):
                            {
                        <span class="small">Scheduled to run on
                        @Html.DisplayFor(modelItem => item.StatusDate)</span>    
                                break;
                            }

                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Progress):
                            {
                        <span class="small">Progess of:  @item.PercentComplete %</span>
                                break;
                            }


                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Completed):
                            {
                        <span class="small">Completed on:  @item.StatusDate </span>
                                break;
                            }

                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Stopped):
                            {
                        <span class="small">Stopped on  @item.StatusDate</span>
                                break;
                            }

                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.Rejected):
                            {
                        <span class="small">Rejected on  @item.StatusDate</span>
                                break;
                            }

                    }
                </td>
                <td width="100px" class="tdAction">
                    <input type="hidden" name="name" value="@item.Id" class="hdnCampId" />
                    <input type="hidden" name="name" value="@item.TypeId" class="hdnTypeId" />
                    @switch (item.StatusId)
                    {
                        case ((int)EP.BulkMessage.Service.Entity.Enum.CampaignStatus.New):
                            {
                        <a href="#" class="btnApprove">
                            <img src="~/Images/approve.png" width="17" height="13" title="Approve" /></a>
                        <a href="#" class="btnReject">
                            <img src="~/Images/delete.png" width="16" height="16" title="Reject" /></a>
                                break;
                            }
                    }

                    <a href="~/Campaign/ApprovalDetails/@item.Id">
                        <img src="~/Images/detail.png" width="16" height="16" title="Detail" /></a>

                </td>
            </tr>
        }

    </table>
</div>
<div id="dialogReject" class="dialog" title="Confirm to Reject">Are you sure you want to reject the campaign?</div>
<div id="dialogApprove" class="dialog" title="Confirm to Approve">Are you sure you want to approve the campaign?</div>
